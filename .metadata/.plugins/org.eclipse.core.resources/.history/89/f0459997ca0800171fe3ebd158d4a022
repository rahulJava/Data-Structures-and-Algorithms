package Thread;

public class A {
	public static void main(String[] args) {
		 	prints print = new prints();
	        B t1 = new B(print, 10, false);
	        B t2 = new B(print, 10, true);
	        t1.start();
	        t2.start();
		
	}

}

class B extends Thread
{
	prints print;
	int max;
	boolean isEvenNumber;
	B(prints print, int max, boolean isEvenNumber) {
        this.print = print;
        this.max = max;
        this.isEvenNumber = isEvenNumber;
    }

	public void run()
	{
		
		for(int i = 0;i<100;i++)
		{
			if(i%2==0)
			{
				print.printEven(i);
			}
			else
			{
				print.printOdd(i);
			}
				
		}
	}
}
class prints
{
	boolean isOdd= false;
	public   synchronized void printEven (int i)
	{
		while(isOdd==false)
		{
		
		try {
			wait();
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		isOdd = false;
		}
		notifyAll();
	}
	public   synchronized void printOdd (int i) 
	{
		
		while(isOdd==true)
		{
		try {
			wait();
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		}
		isOdd=true;
		System.out.println("odd:"+Thread.currentThread().getName()+" "+i);
			notifyAll();
	}
	
}
