1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
package ds.singlylinkedlist;
 
public class SinglyLinkedList {
    private Node first;
    private Node last;
    public SinglyLinkedList(){
         
    }
     
    public boolean isEmpty(){
        return (first == null);
    }
     
    // used to insert at the beginning of the list
    public void insertFirst(int data){
        Node newNode = new Node();
        newNode.data = data;
        newNode.next = first;
        first = newNode;
    }
     
    public Node deleteFirst(){
        Node temp = first;
        first = first.next;
        return temp;
    }
     
    public void displayList(){
        System.out.println("List (first --> last) ");
        Node current = first;
        while(current != null){
            current.displayNode();
            current = current.next;
        }
        System.out.println();
    }
     
    public void insertLast(int data){
        Node current = first;
        while(current.next != null){
            current = current.next; // we'll loop until current.next is null
        }
        Node newNode = new Node();
        newNode.data = data;
        current.next = newNode;
    }
}